
worker_processes auto;

load_module /etc/nginx/modules/ngx_http_image_filter_module.so;
load_module /etc/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /etc/nginx/modules/ngx_http_brotli_static_module.so;

#pid /var/run/new_nginx.pid;

events {
    worker_connections 1024;
}

http {

    include mime.types;

    gzip on;
    gzip_comp_level 4;

    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/png;

    # brotli
    brotli on;
    brotli_static on;
    brotli_comp_level 4;
    brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap image/png;
    
    server {
        listen 80;
        server_name www.nginxfundementals.com nginxfundementals.com;
        return 301 https://$server_name$request_uri;
    }

    server {

        listen 443 ssl;
        server_name www.nginxfundementals.com nginxfundementals.com;

        #project located under this folder
        root /home/dhawan/projects/nginx/udemy/demo;

        index index.php index.html;

        ssl_certificate /home/dhawan/server.cer;
        ssl_certificate_key /home/dhawan/server.key;

        #Check static api key
        # if ( $arg_apikey != 1234 ) {
        #     return 401 "Incorrect Api Key";
        # }

        #set $myname "dhawan";

        #Preferential prefix match
        # location ^~ /Greet2 {
        #     return 200 "Hello from nginx greet location - Preferential prefix match";
        # }

        #Prefix match
        # location /greet {
        #     return 200 "Hello from nginx greet location - Prefix match";
        # }

        #Exact match
        # location = /greet {
        #     return 200 "Hello from nginx greet location - Exact Match";
        # }

        #Regex match - Case sensitive
        # location ~ /greet[0-9] {
        #     return 200 "Hello from nginx greet location - Regex Match Case sensitive";
        # }

        # #Regex match - Case insensitive
        # location ~* /greet[0-9] {
        #     return 200 "Hello from nginx greet location - Regex Match Case insensitive";
        # }

        # location /inspect {
        #     return 200 "$host\n$uri\n$args\nName: $arg_name";
        # }

        # location /name {
        #     return 200 "$myname";
        # }

        # tell nginx that this is the last rewrite to apply
        # rewrite ^/user/(\w+) /greet/$1 last;
        # rewrite ^/greet/jim /thumb.png;

        # location /greet {
        #     return 200 "Hello User";
        # }

        # location = /greet/john {
        #     return 200 "Hello John";
        # }

        location ~* \.(css|js|png|jpg|jpeg)$ {
            access_log off;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            #One Month
            expires 1M;
        }

        location / {
            try_files $uri $uri/ =404;
        }

        location @friendly_404 {
            access_log /var/log/nginx/404_access.log;
            return 404 "Sorry, that file could not be found.";
        }

        location = /thumb.png {
            access_log off;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            #One Month
            expires 1M;
            image_filter rotate 180;
        }


        location /greet {
            access_log off;
            return 200 "Hello User";
        }
        
    }

}